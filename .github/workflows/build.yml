name: build

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
    CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Run lints
    strategy:
      matrix:
        platform: [ubuntu-latest]
        toolchain: [nightly-2022-06-01]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3

      - name: Cache Dependencies & Build Outputs
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: wasm32-unknown-unknown
          components: rustfmt, clippy

      - name: Check Toml Format
        run: |
          if taplo --version &> /dev/null; then
            echo "taplo-cli is already installed"
          else
            cargo install taplo-cli
          fi
          taplo fmt --check

      - name: Check Code Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Check Code Style
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --all-targets --features runtime-benchmarks,try-runtime -- -D warnings

  integration:
    name: Run integration tests
    strategy:
      matrix:
        platform: [ubuntu-latest]
        toolchain: [nightly-2022-06-01]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3

      - name: Cache Dependencies & Build Outputs
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: wasm32-unknown-unknown

      - name: Build manual-seal client
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --verbose --no-default-features --features manual-seal,rpc_binary_search_estimate,evm-tracing

      - name: Setup Node.js v10
        uses: actions/setup-node@v3
        with:
          node-version: 10
      - name: Install functional tests typescript
        run: cd ts-tests && npm install
      - name: Run functional tests
        run: cd ts-tests && npm run build && npm run test
